protocol
========

add network-id and version-id


blockchain
==========

#1
Add a timestamp to the genesis block (only the genesis block) so the system can have a notion of time elapsed.


blockchain::app::id is currently fixed number provided by selves apps. Change it so the app::id are assigned by blockchain::daemon class at the moment of registration.


cash
====

Cash-Supply function: Based on #1 create a function cash::app::block_reward() returning the current value of the coinbase transaction.

dfs
===
move implementation of load/save from blockchain to dfs 
move impl of process_query_block protocol service to dfs

Simulation
==========

Provide a simulation platform suitable to forecast network behaviours based of hypothetical sizes.


Simulation Exercises
====================

Recreate an scenario in which N number of nodes are participating with a mixture of honest/evil nodes (N=G+B, G stands for good guys, and B for bad guys), in the following way:
Bad guys can be classified as:

* Individual bad guys
* Coluding bad guys

The produce different effects in the system. Individual ones can be seen as a particular case of coluding.
Bad guys shall be modeled with a parameter meaning their weight, as all of them are voting the same tampered diff.

>honest node behavior 
  *As an evidence arrives to a node 
	A: the evidence is reayed to all other neighbours.
	B: A counter initialised to a positive number H (for number of hops) is attached to the evidence. It is decreased and relayed to one other random neighbour only if the counter is positive non-zero.

  Assume the evidence is well formed and valid, so it contributes to the diff the node is building.
  Simulate the diff by assuming the whole app database is just a sequencial number, and the effect of the evidence is increasing a local copy of it.
  At the end of each 1 minute cycle all nodes will relay their diffs to the network.
  Nodes will update the consensual value of the counter based on the opinions of all others.
  
>Evil node behavior
  Reports a fake diff, if the node belongs to a coluding group it must report an agreed diff among the coluding group.

Obtain the probability of fraud in a given length of time.
Fraud happens when Evils nodes have managed to set the counter to their will.


Toolchain
=========

Write a bash program that takes as input the git repository and builds an ISO image for ARM (raspberry PI)
    * Headless GNU/linux
    
Write a bash program that takes as input the git repository and builds the android APK

  










