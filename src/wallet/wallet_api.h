//------------------file generated by apitool- do not edit
#ifndef USGOV_497697419e3194fe9f1a4519160c25c0171553596e75be377926e72888ef3aec
#define USGOV_497697419e3194fe9f1a4519160c25c0171553596e75be377926e72888ef3aec

#include <us/gov/crypto.h>
#include <us/gov/cash.h>

namespace us{ namespace wallet {
using namespace std;

struct wallet_api {
  typedef us::gov::crypto::ec::keys::priv_t priv_t;
  typedef us::gov::crypto::ec::keys::pub_t pub_t;
  typedef us::gov::cash::tx::sigcode_t sigcode_t;
  typedef us::gov::cash::hash_t hash_t;
  typedef us::gov::cash::cash_t cash_t;

    struct tx_make_p2pkh_input {
        typedef  us::gov::cash::tx::sigcode_t sigcode_t;

        hash_t rcpt_addr;
        cash_t amount;
        cash_t fee;
        sigcode_t sigcode_inputs;
        sigcode_t sigcode_outputs;
        bool sendover;

        void to_stream(ostream&) const;
        static tx_make_p2pkh_input from_stream(istream&);
    };


  virtual ~wallet_api() {}

//#include <us/api/apitool_generated_wallet_functions_cpp_purevir>
#include <us/api/apitool_generated__functions_wallet_cpp_purevir>

  void gen_keys(ostream&os);
  static void priv_key(const priv_t& privkey, ostream&);
};


    static ostream& operator << (ostream& os, const wallet_api::tx_make_p2pkh_input& o) {
        o.to_stream(os);
        return os;
    }

}}


#endif
